@model QuanLyDoanhNghiep.Models.CV

@{
    ViewData["Title"] = "Chi tiết CV";
}
<div class="box"></div>
<!-- Breadcrumb -->
<div class="container-fluid mt-1">
    <nav aria-label="breadcrumb ">
        <ol class="breadcrumb">
            @if (ViewBag.Role == "1")
            {
                <li class="breadcrumb-item">
                    <a href="@Url.Action("ActiveJobs", "JobPosition")">Quản lý tin tuyển dụng</a>
                </li>
                <li class="breadcrumb-item" aria-current="page">
                    <a href="@Url.Action("ByJob", "CV", new { id = Model.JobPosition.PositionID })">
                        @Model.JobPosition.PositionName
                    </a>
                </li>
            }
            else
            {
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "CV")">Quản lý vị trí ứng tuyển</a>
                </li>
            }
            <li class="breadcrumb-item active" aria-current="page">
                @Model.User.FullName
            </li>
        </ol>
    </nav>
</div>
<div class="container-fluid mt-4">
    <div class="row">
        <!-- CV Preview Section -->
        <div class="col-md-8 pe-4">
            <div class="cv-preview-container">
                <embed src="@Model.Resume" type="application/pdf" class="pdf-viewer">
            </div>
        </div>

        <!-- CV Info Section -->
        <div class="col-md-4">
            <div class="cv-info-sidebar p-4 rounded-4 shadow-sm bg-white">
                <!-- Candidate Info -->
                <div class="candidate-profile mb-4">
                    <div class="profile-header d-flex align-items-center">
                        <div class="avatar">
                            @{
                                var initials = Model.User.FullName.Split(' ').Last().Substring(0, 2).ToUpper();
                            }
                            <div class="avatar-placeholder">@initials</div>
                        </div>
                        <div class="profile-info ms-3">
                            <h4 class="mb-1 fw-bold">@Model.User.FullName</h4>
                            <div class="d-flex flex-column small text-muted">
                                <span><i class="fas fa-envelope me-2"></i>@Model.User.Email</span>
                                <span><i class="fas fa-phone me-2"></i>@Model.User.PhoneNumber</span>

                            </div>

                        </div>
                    </div>
                </div>
                <hr />
                <!-- Position Info -->
                <div class="position-info mb-4">
                    <a href="@Url.Action("Details", "JobPosition", new { id = Model.JobPosition.PositionID })"
                        class="text-decoration-none">
                        <h5 class="section-title mb-2">Vị trí ứng tuyển</h5>
                        <div class="d-flex align-items-center">
                            <div class="company-logo me-3">
                                <img src="/img/CompanyLogo/@Model.JobPosition.Company.CompanyLogo" alt="Company Logo"
                                    class="img-fluid rounded-circle" style="width: 56px; height: 56px;">
                            </div>
                            <div>
                                <div class="fw-semibold">@Model.JobPosition.PositionName</div>
                                <div class="text-muted small mb-1">@Model.JobPosition.Company.CompanyName</div>
                                <span class="badge @(Model.JobPosition.PositionType ? "bg-success" : "bg-info")">
                                    @(Model.JobPosition.PositionType ? "Nhân viên" : "Thực tập sinh")
                                </span>
                            </div>
                        </div>
                    </a>
                </div>
                <hr />
                <!-- CV Status -->
                <div class="cv-status mb-4">
                    <h5 class="section-title mb-2">Trạng thái CV</h5>
                    <div class="d-flex justify-content-between align-items-center mb-2"></div>
                    <span>Ngày ứng tuyển</span>
                    <span class="text-muted">
                        @(Model.SubmissionDate?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")
                    </span>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span>Trạng thái</span>
                    <span class="status-badge @GetStatusClass(Model.Status)">
                        @GetStatusText(Model.Status)
                    </span>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <span>Nguồn</span>
                    <span class="source-badge">Ứng tuyển</span>
                </div>
                @if (Model.Status != 0)
                {
                    <div class="feedback-display mt-3">
                        <div class="d-flex align-items-center mb-2">
                            <i class="fas fa-comment-dots fa-lg me-2 text-primary"></i>
                            <span class="fw-semibold">Phản hồi của người duyệt:</span>
                        </div>
                        <div class="feedback-content px-2 py-2 rounded-3 bg-light">
                            @if (!string.IsNullOrEmpty(Model.Feedback))
                            {
                                <span>@Model.Feedback</span>
                            }
                            else
                            {
                                <span class="text-muted fst-italic">Chưa có phản hồi</span>
                            }
                        </div>
                        <div class="text-end text-muted small mt-1">
                            <i class="fas fa-calendar-alt me-1"></i>
                            @(Model.EvaluationDate?.ToString("dd/MM/yyyy HH:mm") ?? "N/A")
                        </div>
                    </div>
                }
            </div>
            @if (ViewBag.Role == "1" && Model.Status == 0)
            {
                <hr />
                <!-- CV Evaluation -->
                <div class="cv-evaluation mb-4">
                    <h5 class="section-title mb-2">Đánh giá CV</h5>
                    <form id="evaluationForm" method="post" action="@Url.Action("UpdateStatus", "CV")">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.CV_ID" />
                        <input type="hidden" name="status" id="statusInput" value="" />
                        <div class="mb-3">
                            <label for="feedback" class="form-label">Nhận xét đánh giá:</label>
                            <textarea class="form-control" name="feedback" id="feedback" rows="3"
                            required>@Model.Feedback</textarea>
                        </div>
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-success" onclick="submitForm(1)">
                                <i class="fas fa-check me-2"></i> Duyệt CV
                            </button>
                            <button type="button" class="btn btn-danger" onclick="submitForm(2)">
                                <i class="fas fa-times me-2"></i> Từ chối CV
                            </button>
                        </div>
                    </form>
                </div>
            }
            <hr />
            <!-- Action Buttons -->
            <div class="cv-actions">
                <a href="@Model.Resume" download class="btn btn-outline-primary w-100">
                    <i class="fas fa-download me-2"></i> Tải CV
                </a>
            </div>
        </div>
    </div>
</div>
</div>


@section Scripts {
    <script>
        function submitForm(status) {
            if (!document.getElementById('feedback').value.trim()) {
                alert('Vui lòng nhập nhận xét đánh giá!');
                return;
            }

            document.getElementById('statusInput').value = status;
            document.getElementById('evaluationForm').submit();
        }
    </script>
}

@functions {
    string GetStatusClass(int status)
    {
        return status switch
        {
            0 => "status-pending",
            1 => "status-approved",
            2 => "status-rejected",
            _ => "status-pending"
        };
    }

    string GetStatusText(int status)
    {
        return status switch
        {
            0 => "Chờ duyệt",
            1 => "Đã duyệt",
            2 => "Đã từ chối",
            _ => "Chờ duyệt"
        };
    }
}

<style>
    .cv-preview-container {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        height: calc(100vh - 100px);
        position: sticky;
        top: 20px;
        overflow: hidden;
    }

    .pdf-viewer {
        width: 100%;
        height: 100%;
        border: none;
    }

    .cv-info-sidebar {
        background: transparent;
        border-radius: 0;
        box-shadow: none;
        padding: 0;
    }

    .section-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #2c3e50;
    }

    .candidate-profile .avatar-placeholder {
        width: 56px;
        height: 56px;
        background: #e0f2fe;
        color: #0d6efd;
        font-size: 1.5rem;
        font-weight: 700;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: 4px;
        font-weight: 500;
    }

    .status-pending {
        background-color: #ffc107;
        color: #000;
    }

    .status-approved {
        background-color: #28a745;
        color: #fff;
    }

    .status-rejected {
        background-color: #dc3545;
        color: #fff;
    }

    .source-badge {
        background-color: #6c757d;
        color: #fff;
        padding: 6px 12px;
        border-radius: 4px;
    }

    .feedback-display {
        background-color: #f8f9fa;
        padding: 15px 10px 10px 10px;
        border-radius: 8px;
        margin-top: 10px;
        border: 1px solid #e3e6ed;
    }

    .feedback-content {
        font-size: 1rem;
        color: #222;
    }

    .cv-evaluation textarea.form-control {
        border-radius: 8px;
    }

    .cv-actions {
        margin-top: 18px;
    }
</style>