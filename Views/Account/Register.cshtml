@model QuanLyDoanhNghiep.Models.Account
@{
    ViewData["Title"] = "Register";
    ViewData["CSS"] = Url.Content("~/css/login.css");
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<div class="login-container">
    <h1 class="form-title">Create Account</h1>
    <form id="createAccountForm" class="login-form">
        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-id-card"></i>
                <input type="text" id="EmployeeID" name="EmployeeID" placeholder="Employee ID" class="form-control" required />
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-user"></i>
                <input type="text" id="EmployeeName" name="EmployeeName" placeholder="Employee Name" class="form-control" required />
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-phone"></i>
                <input type="text" id="PhoneNumber" name="PhoneNumber" placeholder="Phone Number" class="form-control" required />
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-venus-mars"></i>
                <select id="Gender" name="Gender" class="form-control" required>
                    <option value="" disabled selected>Select Gender</option>
                    <option value="false">Male</option>
                    <option value="true">Female</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-envelope"></i>
                <input type="email" id="Email" name="Email" placeholder="Email" class="form-control" required />
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-building"></i>
                <input type="text" id="CompanyID" name="CompanyID" placeholder="Company ID" class="form-control" required />
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-user-circle"></i>
                <input type="text" id="UserName" name="UserName" placeholder="Username" class="form-control" required />
            </div>
        </div>

        <div class="form-group">
            <div class="input-group">
                <i class="fas fa-lock"></i>
                <input type="password" id="Password" name="Password" placeholder="Password" class="form-control" required />
            </div>
        </div>

        <button type="submit" class="login-button">Register</button>
        
        <div class="form-footer">
            <p>Already have an account? <a href="@Url.Action("Login", "Account")" class="forgot-password">Login</a></p>
        </div>
    </form>
</div>

<style>
.login-container {
    max-width: 500px;
    margin: 50px auto;
    padding: 40px;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 10px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
}

.form-title {
    text-align: center;
    margin-bottom: 30px;
    color: #333;
    font-size: 2em;
}

.form-group {
    margin-bottom: 20px;
}

.input-group {
    position: relative;
    margin-bottom: 10px;
}

.input-group i {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: #666;
}

.form-control {
    width: 100%;
    padding: 12px 40px;
    border: none;
    border-bottom: 2px solid #ddd;
    background: transparent;
    transition: all 0.3s ease;
    font-size: 16px;
}

.form-control:focus {
    border-color: #ff4b6c;
    outline: none;
}

.login-button {
    width: 100%;
    padding: 12px;
    background: #ff4b6c;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    transition: background 0.3s;
    margin-top: 20px;
}

.login-button:hover {
    background: #ff3356;
}

.form-footer {
    text-align: center;
    margin-top: 20px;
    color: #666;
}

.form-footer a {
    color: #ff4b6c;
    text-decoration: none;
    transition: color 0.3s;
}

.form-footer a:hover {
    color: #ff3356;
}

body {
    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('/images/background.jpg');
    background-size: cover;
    background-position: center;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.text-danger {
    color: #dc3545;
    font-size: 14px;
    margin-top: 5px;
    display: block;
}
</style>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://kit.fontawesome.com/your-code.js" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            $("#createAccountForm").on("submit", function (event) {
                event.preventDefault();
                
                // Kiểm tra thông tin tài khoản
                if (!$('#UserName').val().trim() || !$('#Password').val().trim()) {
                    alert('Account information cannot be empty!');
                    return;
                }

                // Tạo object chứa thông tin tài khoản
                var AccountData = {
                    UserName: $('#UserName').val(),
                    Password: $('#Password').val()
                };

                // Gửi yêu cầu tạo tài khoản
                $.ajax({
                    url: "/Account/Create_Account_Employee",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(AccountData),
                    success: function (result) {
                        if (result && result.accountID) {
                            var accountID = result.accountID;
                            
                            // Tạo object chứa thông tin nhân viên
                            var EmployeeData = {
                                EmployeeID: $('#EmployeeID').val(),
                                EmployeeName: $('#EmployeeName').val(),
                                PhoneNumber: $('#PhoneNumber').val(),
                                Gender: $('#Gender').val() === "true",
                                Email: $('#Email').val(),
                                CompanyID: $('#CompanyID').val(),
                                AccountID: accountID
                            };

                            // Gửi yêu cầu tạo nhân viên
                            $.ajax({
                                url: "/Employee/Create1",
                                type: "POST",
                                contentType: "application/json",
                                data: JSON.stringify(EmployeeData),
                                success: function (result) {
                                    alert("Employee account created successfully!");
                                    window.location.href = '/Account/Login';
                                },
                                error: function (err) {
                                    // Nếu tạo nhân viên thất bại, xóa tài khoản đã tạo
                                    $.ajax({
                                        url: '/Account/Delete/' + accountID,
                                        type: 'POST',
                                        success: function () {
                                            alert('Failed to create employee. Account has been deleted.');
                                        },
                                        error: function () {
                                            alert('Could not delete account. Please check!');
                                        }
                                    });
                                }
                            });
                        }
                    },
                    error: function (err) {
                        alert("This account already exists. Please choose another username.");
                    }
                });
            });
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


